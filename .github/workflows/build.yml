name: Silverdium Launcher Build

on:
  push:
    branches: [ recette ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: release ${{ env.version }}
          draft: false
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}

  build-launcher:
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-14, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build with obfuscation and custom icon
        run: |
          # Lancer ton script de build personnalisé avec les options
          node build.js --obf=true --icon=https://example.com/icon.png --build=platform
        shell: bash

      - name: Build App
        run: |
          # Utiliser Electron Builder pour créer les packages pour différentes plateformes
          npm run build
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Silverdium-Launcher-Build
          path: build/**/*

      - name: Create GitHub Release Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/your-built-file.zip
          asset_name: silverdium-launcher-${{ env.version }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build-launcher
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Release App on GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: build/your-built-file.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
