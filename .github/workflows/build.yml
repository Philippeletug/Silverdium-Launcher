name: Launcher Build

on:
  push:
    branches: [ recette ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get version from package.json
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Show Version for Debug
        run: echo "Version is ${{ env.VERSION }}"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: ${{ contains(env.VERSION, 'beta') || contains(env.VERSION, 'alpha') }}

  build-launcher:
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-14, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install NPM dependencies
        run: npm ci
        shell: bash

      - name: Build application
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build
        shell: bash

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: launcher-build-${{ runner.os }}
          path: build/

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        format: [deb, rpm]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Linux dependencies
        run: sudo apt-get install -y libx11-dev fakeroot dpkg rpm

      - name: Install NPM dependencies
        run: npm ci
        shell: bash

      - name: Build Linux Application (${{ matrix.format }})
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build -- --linux --${{ matrix.format }}

      - name: Upload Linux Build Artifacts (${{ matrix.format }})
        uses: actions/upload-artifact@v3
        with:
          name: launcher-linux-${{ matrix.format }}
          path: build/

      - name: Upload to GitHub Release (${{ matrix.format }})
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.${{ matrix.format }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
