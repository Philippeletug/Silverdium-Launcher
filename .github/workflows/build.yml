name: Launcher Build

on:
  push:
    branches: [ recette ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get version from package.json
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: ${{ contains(env.VERSION, 'beta') || contains(env.VERSION, 'alpha') }}

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        format: [deb, rpm]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install Linux dependencies
        run: sudo apt-get install -y libx11-dev fakeroot dpkg rpm

      - name: Install NPM dependencies
        run: npm ci
        shell: bash

      - name: Build Linux Application (${{ matrix.format }})
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build -- --linux --${{ matrix.format }}

      - name: Upload Linux Build Artifacts (${{ matrix.format }})
        uses: actions/upload-artifact@v4
        with:
          name: launcher-linux-${{ matrix.format }}
          path: build/

      - name: Upload to GitHub Release (${{ matrix.format }})
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.${{ matrix.format }}
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
